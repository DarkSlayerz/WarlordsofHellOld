import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.zip.CRC32;


public class CrcGenerator {
     static PrintWriter out;
     static String Root = "C:/lolscape/";
	  public static void main(String[] args) throws IOException {
		  FileWriter outputFileReader = new FileWriter(Root + "Patch.xml");
		 out = new PrintWriter(outputFileReader);
		 out.println("<?xml version='1.0'?>");
		 out.println("<Steven>");
		    File aFile = new File(Root);
		    Process(aFile);

		    out.println("</Steven>");
		    out.close();
		  }
	  static void Process(File aFile) {	
	    if(aFile.isFile() && !aFile.getName().contains("Thumbs.db") && !aFile.getName().contains("Patch.xml")) {
	    	out.println("	<Update>");
	    	out.println("		<name>" + aFile.getName() + "</name>");
	    	out.println("		<dir>" + aFile.getParent().replace(Root.replace("/", "\\"), "") + "</dir>");
	    	out.println("		<size>" + aFile.length() + "</size>");
	    	out.println("		<crc>" + doConvert32(aFile) + "</crc>");
	    	out.println("	</Update>");
	    } else if (aFile.isDirectory()) {
	      File[] listOfFiles = aFile.listFiles();
	      if(listOfFiles!=null) {
	        for (int i = 0; i < listOfFiles.length; i++)
	          Process(listOfFiles[i]);
	      }
	    }
	  }
	  public static String doConvert32(File file)
	    {
	        byte[] bytes = readBytesFromFile(file);
	        CRC32 x = new CRC32();
	        x.update(bytes);
	        return (Long.toHexString(x.getValue())).toUpperCase();
	    }

	    private static byte[] readBytesFromFile(File file)
	    {
	        try
	        {
	            InputStream is = new FileInputStream(file);
	            long length = file.length(); 
	            byte[] bytes = new byte[(int)length]; 
	            int offset = 0; 
	            int numRead = 0; 
	            while (offset < bytes.length && (numRead=is.read(bytes, offset, bytes.length-offset)) >= 0)
	            { 
	                offset += numRead; 
	            } 
	            if (offset < bytes.length) { 
	                System.out.println("Could not completely read file " + file.getName()); 
	            } 
	            is.close(); 
	            return bytes;
	        }
	        catch (IOException e)
	        {
	            System.out.println("IOException " + file.getName()); 
	            return null;
	        }
	    }
}